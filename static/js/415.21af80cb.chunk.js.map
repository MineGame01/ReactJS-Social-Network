{"version":3,"file":"static/js/415.21af80cb.chunk.js","mappings":"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","sources":["api/UsersAPI.js","api/FollowerAPI.js","redux/Slices/UsersSlice/UsersThunkCreator.js","webpack://reactjs-social-network/./src/components/Users/Users/User/User.module.scss?465a","components/Users/Users/User/User.jsx","components/Users/Users/Users.jsx","webpack://reactjs-social-network/./src/components/Users/SearchInput/SearchInput.module.scss?d7bf","components/Users/SearchInput/SearchInput.jsx","webpack://reactjs-social-network/./src/components/Users/PageNumber/PageNumberLent.module.scss?3164","components/Users/PageNumber/PageNumberLent.jsx","components/Users/UsersContainer.jsx"],"sourcesContent":["import {defaultConfig} from \"./defaultConfigAPI\";\r\n\r\nexport const UsersAPI = {\r\n    getUsers(PageNumber, SearchText) {\r\n        return defaultConfig.get(`/users?page=${PageNumber}&term=${SearchText}`)\r\n            .then(response => response.data)\r\n    }\r\n}","import {defaultConfig} from \"./defaultConfigAPI\";\r\n\r\nexport const FollowerAPI = {\r\n    setFollower(userID) {\r\n        return defaultConfig.post(`/follow/${userID}`,)\r\n            .then(response => response.data)\r\n    },\r\n    deleteFollower(userID) {\r\n        return defaultConfig.delete(`/follow/${userID}`)\r\n            .then(response => response.data)\r\n    }\r\n}","import {UsersAPI} from \"../../../api/UsersAPI\";\r\nimport {FollowerAPI} from \"../../../api/FollowerAPI\";\r\nimport {setFollower, getData, getTotalCount, toFollowing, toLoades, deleteFollower} from \"./UsersSlice\";\r\n\r\n//Start preloader\r\nconst startLoaderUsers = toLoades({boolean: true})\r\n//Stop preloader\r\nconst stopLoaderUsers = toLoades({boolean: false})\r\n\r\n//Receives all users\r\nexport const getUserThunkCreator = (PageNumber, SearchText) => async dispatch => {\r\n    //Start preloader\r\n    dispatch(startLoaderUsers)\r\n    //Send request to the API\r\n    const data = await UsersAPI.getUsers(PageNumber, SearchText)\r\n    //If response is successful, then save data\r\n    if (data) {\r\n        //Saving data\r\n        dispatch(getData({data: data.items}))\r\n        dispatch(getTotalCount({count: data.totalCount}))\r\n        //Stop preloader\r\n        dispatch(stopLoaderUsers)\r\n    }\r\n}\r\n\r\n//Toggle follower status user per id\r\nexport const toggleFollowerStatus = (userId, method) => async dispatch => {\r\n    //Create let operator\r\n    let apiMethod, actionMethod\r\n\r\n    if (method === 'set') {\r\n        //If parameter is 'set', then subscribe user\r\n        apiMethod = FollowerAPI.setFollower.bind(FollowerAPI)\r\n        actionMethod = setFollower\r\n    } else if (method === 'delete') {\r\n        //If parameter is 'delete', then unsubscribe user\r\n        apiMethod = FollowerAPI.deleteFollower.bind(FollowerAPI)\r\n        actionMethod = deleteFollower\r\n    } else {\r\n        //If after request return error, stop performance\r\n        return\r\n    }\r\n\r\n    //Send user id to pending\r\n    dispatch(toFollowing({userID: userId, boolean: true}))\r\n\r\n    //Send request to api\r\n    try {\r\n        const data = await apiMethod(userId)\r\n        if (data.resultCode === 0) {\r\n            //If the request is successful, then change the followed parameter, in the object to 'true'\r\n            dispatch(actionMethod({id: userId}))\r\n            //Stop pending the user id\r\n            dispatch(toFollowing({userID: userId, boolean: false}))\r\n        } else {\r\n            //If the request return error, then send to the console error the error\r\n            console.error('Failed to toggle follower status')\r\n        }\r\n    } catch (error) {\r\n        //If after sending request to api return error, then send to the console error the error\r\n        console.error('An error occurred: ', error)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"User_user__8boIy\",\"body\":\"User_body__vWnOo\",\"logo\":\"User_logo__Te+lp\",\"info\":\"User_info__kOKIl\",\"name\":\"User_name__Yb9Ds\",\"subtitle\":\"User_subtitle__5rOUX\",\"location\":\"User_location__maCEY\"};","import React from \"react\";\r\nimport Style from './User.module.scss'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst User = ({id, followedOnUser, ...props}) => {\r\n    const followedOnUserFunction = () => {\r\n        const method = props.followed ? 'delete' : 'set'\r\n        props.toggleFollowerStatus(id, method)\r\n    }\r\n    return (\r\n        <div className={Style.user} id={id}>\r\n            <div className={Style.body}>\r\n                <div className={Style.logo}>\r\n                    <NavLink to={'/profile/' + id}>\r\n                        <img\r\n                            src={props.img || 'https://www.shutterstock.com/image-vector/default-avatar-profile-icon-social-600nw-1677509740.jpg'}\r\n                            alt={props.img || 'https://www.shutterstock.com/image-vector/default-avatar-profile-icon-social-600nw-1677509740.jpg'}\r\n                        />\r\n                    </NavLink>\r\n                    {props.followed ?\r\n                        <button\r\n                            className='buttonDefault'\r\n                            onClick={followedOnUserFunction}\r\n                            disabled={props.isFollowing.some(el => el === id)}\r\n                        >Unsubscribe</button>\r\n                        : <button\r\n                            className='buttonDefault'\r\n                            onClick={followedOnUserFunction}\r\n                            disabled={props.isFollowing.some(el => el === id)}\r\n                        >Subscribe</button>}\r\n                </div>\r\n                <div className={Style.info}>\r\n                    <div className={Style.name}>{props.name}</div>\r\n                    <div className={Style.subtitle}>{props.status}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react'\r\nimport User from \"./User/User\";\r\n\r\nconst Users = ({users, isFollowing, ...props}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                users.map(info => {\r\n                    return <User\r\n                        id={info.id}\r\n                        img={info.photos.small}\r\n                        followed={info.followed}\r\n                        name={info.name}\r\n                        status={info.status}\r\n                        isFollowing={isFollowing}\r\n                        users={users}\r\n                        toggleFollowerStatus={props.toggleFollowerStatus}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Users;","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"SearchInput_body__EWuGr\"};","import React from 'react'\r\nimport styles from './SearchInput.module.scss'\r\n\r\nconst SearchInput = props => {\r\n    const {PageNumber, updatePageNumber, SearchText, updateSearchText} = props\r\n    return <div className={styles.body}>\r\n        <div>\r\n            <span>Pages: </span>\r\n            <input\r\n                className={'textareaDefault'}\r\n                type=\"number\"\r\n                value={PageNumber}\r\n                onChange={updatePageNumber}\r\n            />\r\n        </div>\r\n        <div>\r\n            <span>Search to the name: </span>\r\n            <input\r\n                className={'textareaDefault'}\r\n                type=\"text\"\r\n                value={SearchText}\r\n                onChange={updateSearchText}\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default SearchInput","// extracted by mini-css-extract-plugin\nexport default {\"PageNumber\":\"PageNumberLent_PageNumber__P5kzZ\",\"PageNumber__body\":\"PageNumberLent_PageNumber__body__ephkh\",\"pageButton\":\"PageNumberLent_pageButton__BHapu\",\"active\":\"PageNumberLent_active__vBhjC\",\"noneActive\":\"PageNumberLent_noneActive__jSZlF\"};","import React, {useState} from 'react'\r\nimport styles from \"./PageNumberLent.module.scss\";\r\n\r\nconst PageNumberLent = props => {\r\n    const {PageNumber, postPageNumber, PageNumberURL, NumberPage} = props\r\n\r\n    const RedirectPage = (number) => {\r\n        if (number !== PageNumberURL)\r\n            postPageNumber(number)\r\n    }\r\n\r\n    const portionCount = Math.ceil(NumberPage / 10)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * 10 + 1\r\n    const rightPortionPageNumber = portionNumber * 10\r\n\r\n    return (\r\n        <div className={styles.PageNumber}>\r\n            <div className={styles.PageNumber__body}>\r\n                {portionNumber > 1 && <button className={'buttonDefault'}\r\n                                              onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>}\r\n                {\r\n                    PageNumber\r\n                        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                        .map(el => {\r\n                            return <span\r\n                                key={el}\r\n                                onClick={() => RedirectPage(el)}\r\n                                className={`buttonDefault \r\n                                    ${styles.pageButton} \r\n                                    ${el === PageNumberURL && styles.active}    `\r\n                                }\r\n                            >{el}</span>\r\n                        })\r\n                }\r\n                {portionCount > portionNumber && <button className={'buttonDefault'}\r\n                                                         onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNumberLent;","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getPageNumber, getSearchText} from \"../../redux/Slices/UsersSlice/UsersSlice\";\r\nimport {\r\n    toggleFollowerStatus,\r\n    getUserThunkCreator,\r\n} from '../../redux/Slices/UsersSlice/UsersThunkCreator'\r\nimport Users from \"./Users/Users\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport SearchInput from \"./SearchInput/SearchInput\";\r\nimport PageNumberLent from \"./PageNumber/PageNumberLent\";\r\nimport {\r\n    getCountPageState, getIsFollowingState, getIsLoadesUsersState,\r\n    getPageNumberState, getSearchTextState,\r\n    getTotalCountState,\r\n    getUsersState\r\n} from \"../../redux/Selectors/Selectors\";\r\nimport {compose} from \"redux\";\r\nimport {WithRouter} from \"../../hoc/WithRouter\";\r\n\r\nclass UsersClass extends React.Component {\r\n    componentDidMount() {\r\n        const {getUserThunkCreator, PageNumber, SearchText} = this.props\r\n        const urlPageNumber = this.props.router.params.pageNumber\r\n        getUserThunkCreator(urlPageNumber ? urlPageNumber : PageNumber, SearchText)\r\n    }\r\n\r\n    updatePageNumber = e => {\r\n        const {getPageNumber, getUserThunkCreator, SearchText} = this.props\r\n\r\n        getPageNumber({number: e.target.value});\r\n        getUserThunkCreator(e.target.value, SearchText)\r\n    }\r\n\r\n    updateSearchText = e => {\r\n        const {getSearchText, getUserThunkCreator, PageNumber} = this.props\r\n\r\n        getSearchText({text: e.target.value});\r\n        getUserThunkCreator(PageNumber, e.target.value)\r\n    }\r\n\r\n    postPageNumber = number => {\r\n        const {getPageNumber, getUserThunkCreator, SearchText} = this.props\r\n\r\n        getPageNumber({number: number});\r\n        getUserThunkCreator(number, SearchText)\r\n    }\r\n\r\n    render() {\r\n        let NumberPage = Math.ceil(this.props.totalCount / this.props.countPage)\r\n        let PageNumber = []\r\n        for (let i = 1; i <= NumberPage; i++) {\r\n            PageNumber.push(i)\r\n        }\r\n        return (\r\n            <div>\r\n                <PageNumberLent\r\n                    NumberPage={NumberPage}\r\n                    PageNumber={PageNumber}\r\n                    PageNumberURL={this.props.PageNumber}\r\n                    postPageNumber={this.postPageNumber}\r\n                />\r\n                <SearchInput\r\n                    PageNumber={this.props.PageNumber}\r\n                    updatePageNumber={this.updatePageNumber}\r\n                    SearchText={this.props.SearchText}\r\n                    updateSearchText={this.updateSearchText}\r\n                />\r\n                {this.props.isLoades ? <Loader /> : <Users\r\n                    users={this.props.users}\r\n                    isFollowing={this.props.isFollowing}\r\n                    toggleFollowerStatus={this.props.toggleFollowerStatus}\r\n                />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapstateToProps = (state) => {\r\n    return {\r\n        users: getUsersState(state),\r\n        PageNumber: getPageNumberState(state),\r\n        countPage: getCountPageState(state),\r\n        totalCount: getTotalCountState(state),\r\n        SearchText: getSearchTextState(state),\r\n        isLoades: getIsLoadesUsersState(state),\r\n        isFollowing: getIsFollowingState(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapstateToProps, {\r\n        getUserThunkCreator,\r\n        toggleFollowerStatus,\r\n        getPageNumber,\r\n        getSearchText\r\n    }),\r\n    WithRouter\r\n)(UsersClass);"],"names":["UsersAPI","getUsers","PageNumber","SearchText","defaultConfig","get","concat","then","response","data","FollowerAPI","setFollower","userID","post","deleteFollower","delete","startLoaderUsers","toLoades","boolean","stopLoaderUsers","_ref","id","followedOnUser","props","followedOnUserFunction","method","followed","toggleFollowerStatus","_jsx","className","Style","children","_jsxs","NavLink","to","src","img","alt","onClick","disabled","isFollowing","some","el","name","status","users","map","info","User","photos","small","updatePageNumber","updateSearchText","styles","type","value","onChange","postPageNumber","PageNumberURL","NumberPage","portionCount","Math","ceil","portionNumber","setPortionNumber","useState","leftPortionPageNumber","rightPortionPageNumber","filter","p","number","UsersClass","React","constructor","arguments","e","getPageNumber","getUserThunkCreator","this","target","getSearchText","text","componentDidMount","urlPageNumber","router","params","pageNumber","render","totalCount","countPage","i","push","PageNumberLent","SearchInput","isLoades","Loader","Users","compose","connect","state","getUsersState","getPageNumberState","getCountPageState","getTotalCountState","getSearchTextState","getIsLoadesUsersState","getIsFollowingState","async","dispatch","getData","items","getTotalCount","count","userId","apiMethod","actionMethod","bind","toFollowing","resultCode","console","error","WithRouter"],"sourceRoot":""}