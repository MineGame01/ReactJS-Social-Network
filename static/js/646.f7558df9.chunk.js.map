{"version":3,"file":"static/js/646.f7558df9.chunk.js","mappings":"mNACA,QAAuB,wB,aCIvB,MAqEA,GAJ2BA,EAAAA,EAAAA,GAAU,CACjCC,KAAM,SADiBD,EAjETE,IACd,MAAM,aACFC,EAAY,MAAEC,EAAK,IACnBC,EAAG,aAAEC,EAAY,MACjBC,GACAL,EACJ,OAAOM,EAAAA,EAAAA,MAAA,QAAMC,SAAUN,EAAcO,UAAWC,EAAWC,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,KAAM,QACNC,UAAWC,EAAAA,EACXC,KAAM,QACNC,YAAa,aAGrBN,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,KAAM,WACNC,UAAWC,EAAAA,EACXC,KAAM,WACNC,YAAa,gBAGrBX,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,KAAM,aACNC,UAAW,QACXE,KAAM,aACR,kBAGNL,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,OAAAD,SACe,+BAAVR,IAA0CI,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKO,IAAKf,EAAKgB,IAAKhB,KACpBQ,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,KAAM,UACNC,UAAWC,EAAAA,EACXC,KAAM,OACNC,YAAa,sBAOjCN,EAAAA,EAAAA,KAAA,OAAKF,MAAO,CAACW,MAAO,OAAOV,SACtBR,IAASS,EAAAA,EAAAA,KAAA,QAAAD,SAAOR,OAErBS,EAAAA,EAAAA,KAAA,UACIU,SAAUjB,EACVY,KAAM,SACNR,UAAW,gBAAgBE,SAC9B,WAEDC,EAAAA,EAAAA,KAAA,UACIK,KAAM,SACNM,QAASjB,EACTG,UAAW,gBAAgBE,SAC9B,sFAEE,IChEX,MAAMa,UAAcC,EAAAA,UAAgBC,WAAAA,GAAA,SAAAC,WAAA,KAKhCnB,SAAYoB,IACRC,KAAK5B,MAAM6B,sBAAsBF,EAAO,CAC3C,CANDG,iBAAAA,GACIF,KAAK5B,MAAM+B,2BACf,CAKAC,MAAAA,GACI,OACI1B,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAACsB,EAAkB,CACf1B,SAAUqB,KAAKrB,SACfJ,IAAKyB,KAAK5B,MAAMkC,WAChB9B,aAAcwB,KAAK5B,MAAMI,iBAIzC,EAGJ,U,gCClBA,MAAM+B,UAAuBX,EAAAA,UACzBQ,MAAAA,GACI,MAAM,0BAACD,EAAyB,sBAAEF,EAAqB,WAAEK,EAAU,aAAE9B,EAAY,OAAEgC,GAAUR,KAAK5B,MAClG,OAAIoC,GACOzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAQ,CAACC,GAAI,cAClB3B,EAAAA,EAAAA,KAAA,OAAAD,UACHC,EAAAA,EAAAA,KAACY,EAAK,CACFQ,0BAA2BA,EAC3BF,sBAAuBA,EACvBK,WAAYA,EACZ9B,aAAcA,KAG1B,EAGJ,MAMA,GAAemC,EAAAA,EAAAA,KANSC,IAAK,CACzBN,YAAYO,EAAAA,EAAAA,IAAmBD,GAC/BpC,cAAcsC,EAAAA,EAAAA,IAAqBF,GACnCJ,QAAQO,EAAAA,EAAAA,IAAeH,MAGa,CACpCT,0BAAyB,KACzBF,sBACJ,MAHA,CAGGM,E","sources":["webpack://reactjs-social-network/./src/components/Login/Login/LoginForm/LoginForm.module.scss?1592","components/Login/Login/LoginForm/LoginForm.jsx","components/Login/Login/Login.jsx","components/Login/LoginContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"LoginForm_body__4RI-8\"};","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Input} from \"../../../common/FormElements/FormElement\";\r\nimport style from './LoginForm.module.scss'\r\n\r\nconst LoginForm = props => {\r\n    const {\r\n        handleSubmit, error,\r\n        url, isLoadesAuth,\r\n        reset\r\n    } = props\r\n    return <form onSubmit={handleSubmit} className={style.body}>\r\n        <div>\r\n            <Field\r\n                name={'email'}\r\n                component={Input}\r\n                type={'email'}\r\n                placeholder={'Email'}\r\n            />\r\n        </div>\r\n        <div>\r\n            <Field\r\n                name={'password'}\r\n                component={Input}\r\n                type={'password'}\r\n                placeholder={'Password'}\r\n            />\r\n        </div>\r\n        <div>\r\n            <Field\r\n                name={'rememberMe'}\r\n                component={'input'}\r\n                type={'checkbox'}\r\n            />\r\n            Remember Me\r\n        </div>\r\n        <div>\r\n            <div>\r\n                {error === 'Incorrect anti-bot symbols' && <div>\r\n                    <img src={url} alt={url}/>\r\n                    <div>\r\n                        <Field\r\n                            name={'captcha'}\r\n                            component={Input}\r\n                            type={'text'}\r\n                            placeholder={'Captcha'}\r\n                        />\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n\r\n        </div>\r\n        <div style={{color: \"red\"}}>\r\n            {error && <span>{error}</span>}\r\n        </div>\r\n        <button\r\n            disabled={isLoadesAuth}\r\n            type={'submit'}\r\n            className={'buttonDefault'}\r\n        >Login\r\n        </button>\r\n        <button\r\n            type={'button'}\r\n            onClick={reset}\r\n            className={'buttonDefault'}\r\n        >Очистить форму\r\n        </button>\r\n    </form>\r\n}\r\n\r\nconst LoginFormReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nexport default LoginFormReduxForm;","import React from 'react'\r\nimport LoginFormReduxForm from \"./LoginForm/LoginForm\";\r\n\r\nclass Login extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUrlCaptchaThunkCreator()\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.AuthLoginThunkCreator(values)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>LOGIN</h1>\r\n                <LoginFormReduxForm\r\n                    onSubmit={this.onSubmit}\r\n                    url={this.props.urlCaptcha}\r\n                    isLoadesAuth={this.props.isLoadesAuth}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Login from \"./Login/Login\";\r\nimport {AuthLoginThunkCreator, getUrlCaptchaThunkCreator} from \"../../redux/Slices/AuthSlice/AuthThunkCreator\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {getIsAuthState, getIsLoadesAuthState, getUrlCaptchaState} from \"../../redux/Selectors/Selectors\";\r\n\r\nclass LoginContainer extends React.Component {\r\n    render() {\r\n        const {getUrlCaptchaThunkCreator, AuthLoginThunkCreator, urlCaptcha, isLoadesAuth, isAuth} = this.props\r\n        if (isAuth)\r\n            return <Navigate to={'/profile'} />\r\n        return <div>\r\n            <Login\r\n                getUrlCaptchaThunkCreator={getUrlCaptchaThunkCreator}\r\n                AuthLoginThunkCreator={AuthLoginThunkCreator}\r\n                urlCaptcha={urlCaptcha}\r\n                isLoadesAuth={isLoadesAuth}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    urlCaptcha: getUrlCaptchaState(state),\r\n    isLoadesAuth: getIsLoadesAuthState(state),\r\n    isAuth: getIsAuthState(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getUrlCaptchaThunkCreator,\r\n    AuthLoginThunkCreator\r\n})(LoginContainer)"],"names":["reduxForm","form","props","handleSubmit","error","url","isLoadesAuth","reset","_jsxs","onSubmit","className","style","children","_jsx","Field","name","component","Input","type","placeholder","src","alt","color","disabled","onClick","Login","React","constructor","arguments","values","this","AuthLoginThunkCreator","componentDidMount","getUrlCaptchaThunkCreator","render","LoginFormReduxForm","urlCaptcha","LoginContainer","isAuth","Navigate","to","connect","state","getUrlCaptchaState","getIsLoadesAuthState","getIsAuthState"],"sourceRoot":""}